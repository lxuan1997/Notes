import{_ as n,p as a,q as s,a1 as t}from"./framework-9bc128ed.js";const e={},p=t(`<h1 id="💡tips" tabindex="-1"><a class="header-anchor" href="#💡tips" aria-hidden="true">#</a> 💡Tips</h1><h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><h4 id="基本类型-简单类型-原始类型" tabindex="-1"><a class="header-anchor" href="#基本类型-简单类型-原始类型" aria-hidden="true">#</a> 基本类型/简单类型/原始类型</h4><p>string、number、boolean、undefined、null、symbol</p><h4 id="复杂类型" tabindex="-1"><a class="header-anchor" href="#复杂类型" aria-hidden="true">#</a> 复杂类型</h4><p>object</p><h2 id="判断是否为空对象" tabindex="-1"><a class="header-anchor" href="#判断是否为空对象" aria-hidden="true">#</a> 判断是否为空对象</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;{}&#39;</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>
</code></pre></div><h2 id="判断是否为数组" tabindex="-1"><a class="header-anchor" href="#判断是否为数组" aria-hidden="true">#</a> 判断是否为数组</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Array]&#39;</span>

Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div><h2 id="encodeuri-与-encodeuricomponent" tabindex="-1"><a class="header-anchor" href="#encodeuri-与-encodeuricomponent" aria-hidden="true">#</a> encodeURI 与 encodeURIComponent</h2><p>encodeURI 一般用于完整的URI，encodeURIComponent 一般用于 URI 组件</p><div class="language-text" data-ext="text"><pre class="language-text"><code>: , ; @ / ? &amp; = + $  // 保留字符
- _ . ! ~ * &#39; ( )    // 不转义字符 🎯
A-Z a-z 0-9          // 字母、数字 🎯
#                	 // 数字标志
</code></pre></div><p>对于以上字符，encodeURI 都不会进行编码；encodeURIComponent 除不转义字符、字母、数字外，其余的都会被编码；对于空格，两种方法编码一个空格时都会转换成 %20；</p><h2 id="ios系统使用new-date显示nan" tabindex="-1"><a class="header-anchor" href="#ios系统使用new-date显示nan" aria-hidden="true">#</a> ios系统使用new Date显示NaN</h2><p>将分隔符<code>-</code> 替换成 <code>/</code></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 2022-09-01 08:00:00 =&gt; 2022/09/01 08:00:00</span>
str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="video-停止播放" tabindex="-1"><a class="header-anchor" href="#video-停止播放" aria-hidden="true">#</a> video 停止播放</h2><blockquote><p>video有<code>play</code>播放，<code>pause</code>暂停，没有<code>stop</code>事件，可以通过<code>pause</code>事件模拟实现</p></blockquote><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    video<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    video<span class="token punctuation">.</span>currentTime <span class="token operator">=</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="如何监听浏览器打开了控制台" tabindex="-1"><a class="header-anchor" href="#如何监听浏览器打开了控制台" aria-hidden="true">#</a> 如何监听浏览器打开了控制台</h2><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> re <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>re<span class="token punctuation">)</span><span class="token punctuation">;</span>
re<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;请关闭控制台&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,22),o=[p];function c(i,u){return a(),s("div",null,o)}const r=n(e,[["render",c],["__file","tips.html.vue"]]);export{r as default};
